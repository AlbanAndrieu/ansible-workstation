---
- name: workstation | Install spelling tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - aspell-fr
    - aspell-en
    - aspell-no
    - aspell-de
  tags:
    - package
    - aspell

- name: workstation | Install editor tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - vim
    - tree
    #midnight commander
    #   - mc
    - xdg-open # https://doc.ubuntu-fr.org/xdg-open
    #   - bat  # See run-bat.sh
    - fd-find
  tags:
    - package
    - editor

- name: workstation | Install editor geany tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - geany
    - geany-plugins
    - gtk2-engines-pixbuf # geany bugfix
  ##sudo apt-cache search geany
  tags:
    - package
    - geany

- name: workstation | Install editor geany configuration
  template: src=geany.conf.j2 dest={{ home }}/.config/geany/geany.conf mode=0755
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags: geany

- name: workstation | Install editor gedit tools (1)
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    #sudo apt-cache search geany
    - gedit
    - gedit-plugins
  tags:
    - package
    - gedit

- name: workstation | Install editor gedit tools (2)
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version in ['12.04','14.04','16.04','18.04']
  with_items:
    - gconf-editor
    #gconf-editor
    - dconf-tools
  #dconf-editor
  tags:
    - package
    - gedit

#TODO
#https://codetree.com.au/projects/imitation/
#cd /workspace
#mkdir imitation-1.3
#cd imitation-1.3
#wget https://codetree.com.au/static/content/imitation/releases/imitation-1.3.tar.gz
#tar -xvf imitation-1.3.tar.gz
#cd imitation
#sudo cp ../org.gnome.gedit.plugins.imitation.gschema.xml /usr/share/glib-2.0/schemas/
#sudo glib-compile-schemas /usr/share/glib-2.0/schemas
#cd ..
#sudo cp -r imitation/ /usr/lib/gedit/plugins/
#sudo cp imitation.plugin /usr/lib/gedit/plugins/

- name: workstation | Install editor gedit-gmate tools PPA
  apt_repository: repo='ppa:ubuntu-on-rails/ppa' update_cache=yes
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version in ['12.04','14.04']
  tags:
    - package
    - gedit

- name: workstation | Install editor gedit-gmate plugin
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version in ['12.04','14.04']
  with_items:
    - gedit-gmate
  tags:
    - package
    - gedit

- name: workstation | Install editor atom tools PPA
  apt_repository: repo='ppa:webupd8team/atom' update_cache=yes
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version in ['16.04']
  tags:
    - package
    - atom

- name: workstation | Install editor atom
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version in ['16.04']
  with_items:
    - atom
  tags:
    - package
    - atom

- name: workstation | Install editor atom
  snap:
    name: atom
    classic: true
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version is version_compare(19.04, '>=')
  tags:
    - package
    - atom

- name: workstation | Install prince
  apt:
    deb: https://www.princexml.com/download/prince_14.2-1_ubuntu20.04_amd64.deb
    when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version is version_compare(19.04, '>=')
  tags:
    - package
    - prince

- name: workstation | Install bat
  apt:
    deb: https://github.com/sharkdp/bat/releases/download/v0.19.0/bat_0.19.0_amd64.deb
    when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version is version_compare(19.04, '>=')
  tags:
    - package
    - bat

#apm install linter
#apm install linter-shellcheck

# See https://www.linuxuprising.com/2019/07/how-to-change-snap-refresh-update.html
- name: workstation | Refresh snap once a week
  command: snap set system refresh.timer=sat,10:00~12:00
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_version is version('19.04', '>=')
  tags:
    - snap
    - refresh
