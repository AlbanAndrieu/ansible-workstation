---

#sudo snap install postman --classic
- name: workstation | Install postman
  snap:
    name: postman
    classic: yes
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and  ansible_distribution_version is version_compare(19.04, '>=')
  tags: package

- name: workstation | Install bash tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags: package
  with_items:
   - sysvbanner

- name: workstation | Install debuging tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - ack
    - command-not-found
    - dstat
    - htop
    - iftop
    - iotop
    - iperf
    - lsof
    - ltrace
    - multitail
    - mtr
    - ncdu
    - pciutils
    - pstack
    - pv
    - smem
    - socat
    - strace
    - sysstat
    - tmux
    - tree
    - tshark
  tags:
    - package
    - monitoring

- name: workstation | Install network debuging tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - ethtool
    - inetutils-traceroute

- name: workstation | Install system debuging tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - systemtap
    #- linux-headers-generic
  tags:
    - package
    - system

- name: workstation | Add linux header for debuging system
  shell: "apt-get install linux-headers-$(uname -r)"
#  changed_when: false
  become: true
#  ignore_errors: true
  tags:
    - package
    - headers
    - system

- name: workstation | Add debuging symbol
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - ubuntu-dbgsym-keyring
    #- xserver-xorg-core-dbgsym
#  ignore_errors: true
  tags:
    - package
    - headers
    - system

#sudo apt-get install gnome-shell-dbgsym libglib2.0-*dbgsym libgtk*-dbgsym
