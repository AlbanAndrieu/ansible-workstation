---

#sudo snap install postman --classic
- name: workstation | Install postman
  snap:
    name: postman
    classic: true
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and  ansible_distribution_version is version_compare(19.04, '>=')
  tags: package

- name: workstation | Install bash tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
   - sysvbanner
  tags:
   - package
   - sysvbanner

- name: workstation | Install direnv bash tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
   - direnv
  tags:
   - package
   - direnv

- name: workstation | Install nvm nodejs tools
  shell: >
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
  args:
    creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
  tags:
   - nodejs
   - nvm

# See https://skofgar.ch/dev/2020/08/how-to-quickly-replace-environment-variables-in-a-file/
- name: workstation | Install bash envsubst tool
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
   - gettext-base  # for envsubst
  tags:
   - package
   - envsubst
